  
ALGORITHM Prob1_sol1
VAR
    Set_1 : ARRAY_OF float[10];
    Set_2 : ARRAY_OF float[10];
    // sum : float:=0 ;
    // trouve :BOOLEAN ;
    // i : INTEGER  ;
    // j : INTEGER  ; 
BEGIN
    write("the first array");          
    read(Set_1); [1,2,3,7]                
    write("the second array");  
    read(Set_2); [4,6,3,5,8,7]

    FOR i FROM 0 TO Set_1.length - 1  DO  3

        trouve:=false ;
        j:=0 ;

        WHILE (trouve=false) and (j<Set_2.length ) DO  4

            IF (Set_1[i]=Set_2[j]) THEN
                trouve:=true ;
            END_IF
            j:=j+1 ;       

        END_WHILE 

        IF (trouve=false) THEN
            sum:=sum+Set_1[i];  
        END_IF

    END_FOR 

    FOR i FROM 0 TO Set_2.length - 1  DO

        trouve:=false ;
        j:=0 ;

        WHILE (trouve=false) and (j<Set_1.length) DO

            IF (Set_1[i]=Set_2[j]) THEN
                ok:=true ;
            END_IF
            j:=j+1 ;
            
        END_WHILE

        IF (trouve=false) THEN
            sum:=sum+Set_2[i];
        END_IF

    END_FOR
    write(sum);
END


------------------



ALGORITHM Prob1_sol2
VAR
    Set_1 : ARRAY_OF float[10];
    Set_2 : ARRAY_OF float[10];
    clés : ARRAY_OF float[20];
    trouve : BOOLEAN ;
    i : INTEGER  ;
    j : INTEGER  ; 
    sum : float:=0 ;
    htab :HASH_TABLE<float,INTEGER> ;

BEGIN
    write("the first array");
    read(Set_1);
    write("the second array");
    read(Set_2);
    FOR i FROM 0 TO Set_1.length  DO
        trouve:=false ;
        j:=0 ;
        WHILE (trouve=false) and (j<Set_2.length) DO

            IF (Set_1[i]=Set_2[j]) THEN
                trouve:=true ;
            END_IF
            j:=j+1 ;

        END_WHILE

        IF (trouve=false) THEN
            htab.insert(Set_1[i],1);
        ELSE
            htab.insert(Set_1[i],2);
        END_IF

    END_FOR 

    FOR i FROM 0 TO Set_2.length  DO
        trouve:=false ;
        j:=0 ;
        WHILE (trouve=false) and (j<Set_2.length) DO

            IF (Set_1[i]=Set_2[j]) THEN
                trouve:=true ;
            END_IF
            j:=j+1 ;

        END_WHILE

        IF (trouve=false) THEN
            htab.insert(Set_2[i],1);
        ELSE
            htab.insert(Set_2[i],2);
        END_IF
        
    END_FOR 

    clés:=htab.keys ;
    i:=0;
    WHILE (i < clés.length) DO
        if (htab.get(clés[i])=1)
        {
          sum:=sum+(htab.get(clés[i])) ;
        }
        i:=i+1 ;
    END_WHILE

 write(sum);
    
   
END

--------------

ALGORITHM Prob2_sol1
VAR
    Set_1 : ARRAY_OF INTEGER[10];
    Set_2 : ARRAY_OF INTEGER[10];
    sum : INTEGER:=0 ;
    trouve :BOOLEAN ;
    i : INTEGER  ;
    j : INTEGER  ; 
BEGIN
    write("the first array");
    read(Set_1);
    write("the second array");
    read(Set_2);
    FOR i FROM 0 TO Set_1.length - 1  DO
        trouve:=false ;
        j:=0 ;

        WHILE (trouve=false) and (j<Set_2.length) DO

            IF (Set_1[i]=Set_2[j]) THEN
                trouve:=true ;
            END_IF
            j:=j+1 ;

        END_WHILE

        IF (trouve=true) THEN
            sum:=sum+(Set_1[i]*2);
        END_IF

    END_FOR 
    write(sum);
END

--------------


ALGORITHM prob2_sol2
VAR
    Set_1 : ARRAY_OF INTEGER[10];
    Set_2 : ARRAY_OF INTEGER[10];
    clés : ARRAY_OF INTEGER[20];
    sum : INTEGER:=0 ;
    trouve :BOOLEAN ;
    i : INTEGER  ;
    j : INTEGER  ; 
    sum : INTEGER:=0 ;
    count : INTEGER ;
BEGIN
    write("the first array");
    read(Set_1);
    write("the second array");
    read(Set_2);

    FOR i FROM 0 TO Set_1.length - 1  DO
        trouve:=false ;
        j:=0 ;
        count:=1;
        WHILE (trouve=false) and (j<Set_2.length) DO
            IF (Set_1[i]=Set_2[j]) THEN
                trouve:=true ;
                count:=2;
                htab.insert(Set_1[i],count);
            END_IF
            j:=j+1 ;
        END_WHILE
        
    END_FOR 

    clés:=htab.keys ;
    i:=0;
    WHILE (i < clés.length) DO
        sum:=sum+(htab.get(clés[i])*2) ;
        i:=i+1 ;
    END_WHILE

 write(sum);
    
